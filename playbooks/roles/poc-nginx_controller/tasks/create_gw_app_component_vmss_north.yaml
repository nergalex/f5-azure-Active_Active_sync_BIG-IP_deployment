- name: SET var_env_prefix
  set_fact:
    var_env_prefix: "env_north_"

- name: Retrieve the NGINX Controller auth token
  include_role:
    name: nginxinc.nginx_controller_generate_token
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_user_email: "{{extra_nginx_controller_username}}"
    nginx_controller_user_password: "{{extra_nginx_controller_password}}"

- name: Create WAF policy
  uri:
    url: "https://{{ extra_nginx_controller_ip }}/api/v1/security/policies/waf_{{ extra_app.name | lower }}_{{ item.name | lower }}"
    method: PUT
    headers:
      "Content-Type": "application/json"
      "Cookie": "{{ nginx_controller_auth_token }}"
    body: "{{ lookup('template','policy_waf.json') }}"
    body_format: json
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202
  loop: "{{ extra_app.components }}"
  when: item.type == "adc" and item.name is match("north")

- name: Create Security strategy
  uri:
    url: "https://{{ extra_nginx_controller_ip }}/api/v1/security/strategies/strategy_{{ extra_app.name | lower }}_{{ item.name | lower }}"
    method: PUT
    headers:
      "Content-Type": "application/json"
      "Cookie": "{{ nginx_controller_auth_token }}"
    body: "{{ lookup('template','strategy.json') }}"
    body_format: json
    return_content: yes
    validate_certs: no
    status_code: 200, 201, 202
  loop: "{{ extra_app.components }}"
  when: item.type == "adc" and item.name is match("north")

- name: Create certificate
  include_role:
    name: nginxinc.nginx_controller_certificate
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_environmentName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}"
    nginx_controller_certificate:
      metadata:
        name: "crt_{{extra_app.name | lower}}"
        displayName: "Certificate {{extra_app.name | lower}}"
        description: Generated by CMP
      desiredState:
        type: PEM
        privateKey: "{{ stats_key }}"
        publicCert: "{{ stats_crt }}"

- name: SET var_tls_enabled
  set_fact:
    var_tls_enabled: yes
    var_instance_group: "{{ extra_vmss_name_nginx_first_line }}"

- name: Create generic gateway http2https
  include_role:
    name: nginxinc.nginx_controller_gateway
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_environmentName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}"
    nginx_controller_gateway: "{{ lookup('template','gateway_http2https.json') }}"

- name: Create generic application http2https
  include_role:
    name: nginxinc.nginx_controller_application
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_environmentName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}"
    nginx_controller_app:
      metadata:
        name: "{{ var_env_prefix }}{{ extra_app.environment | lower }}_http2https"
        displayName: "generic http2https"
        description: "Redirect HTTP to HTTPS"
        tags:
          - "{{ var_instance_group }}"

- name: Create generic components http2https | generic
  include_role:
    name: nginxinc.nginx_controller_component
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_environmentName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}"
    nginx_controller_appName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}_http2https"
    nginx_controller_component: "{{ lookup('template','component_http2https.json') }}"

- name: Create Gateway
  include_role:
    name: nginxinc.nginx_controller_gateway
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_environmentName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}"
    nginx_controller_gateway: "{{ lookup('template','gateway_instance_group.json') }}"

- name: CREATE an App
  include_role:
    name: nginxinc.nginx_controller_application
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_environmentName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}"
    nginx_controller_app: "{{ lookup('template','application.json') }}"

- name: CREATE a Component
  include_role:
    name: nginxinc.nginx_controller_component
  vars:
    nginx_controller_fqdn: "{{extra_nginx_controller_ip}}"
    nginx_controller_environmentName: "{{ var_env_prefix }}{{ extra_app.environment | lower }}"
    nginx_controller_appName: "app_{{ extra_app.name }}.{{ extra_app.domain }}"
    nginx_controller_component: "{{ lookup('template', item.template) }}"
  loop: "{{ extra_app.components }}"
  when: item.type == "adc" and item.name is match("north")

#- name: SET Consul - Source of Truth
#  consul_kv:
#    scheme: "{{extra_consul_agent_scheme}}"
#    validate_certs: no
#    host: "{{extra_consul_agent_ip}}"
#    port: "{{extra_consul_agent_port}}"
#    key: "{{ extra_project_name }}/{{ extra_vmss_name_nginx_first_line }}/{{ extra_app.name }}"
#    value: "{{ extra_app }}"