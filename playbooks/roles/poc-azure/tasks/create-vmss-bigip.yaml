---
- name: CREATE a Virtual Machine Scale Set
  delegate_to: localhost
  azure_rm_virtualmachinescaleset_2NIC:
    resource_group: "rg-{{ extra_platform_name }}"
    name: "{{ extra_vmss_name }}"
    location: "{{ extra_location }}"
    vm_size: "{{ extra_vm_size }}"
    capacity: "{{ extra_vmss_capacity }}"
    overprovision: true
    upgrade_policy: "Manual"
    tags: "{{ extra_platform_tags }}
              Name={{ extra_vmss_name }}
              owner={{ owner }}"
    admin_username: "{{ infra_admin_username }}"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: "/home/{{ infra_admin_username }}/.ssh/authorized_keys"
        key_data: "{{ extra_key_data }}"
    image:
      offer: "{{ extra_offer }}"
      publisher: f5-networks
      sku: "{{ extra_sku }}"
      version: "{{ tmos_version }}"
    plan:
      name: "{{ extra_sku }}"
      product: "{{ extra_offer }}"
      publisher: f5-networks
    data_disks:
      - lun: 0
        disk_size_gb: 128
        caching: ReadWrite
        managed_disk_type: Premium_LRS
    managed_disk_type: Premium_LRS
    os_type: Linux
    virtual_network_name: "vnet-{{ extra_platform_name }}"
    subnet_mgt: "net-{{ extra_platform_name }}-management"
    subnet_dataplane: "net-{{ extra_platform_name }}-{{ extra_subnet_dataplane_name }}"
    load_balancer_mgt: "elb-{{ extra_platform_name }}-{{ extra_elb_management_name }}"
    load_balancer_dataplane: "ilb-{{ extra_platform_name }}-{{ extra_subnet_dataplane_name }}"
    remove_on_absent: 'all'
    enable_accelerated_networking: false
    security_group: "nsg-{{ extra_platform_name }}-trust"
    zones: '{{ extra_availability_zone }}'
  register: output_vmss

- name: CREATE VMSS Extension
  delegate_to: localhost
  azure_rm_virtualmachinescalesetextension:
    resource_group: "rg-{{ extra_platform_name }}"
    vmss_name: "{{ extra_vmss_name }}"
    name: "extension-{{ extra_vmss_name }}"
    location: "{{ extra_location }}"
    publisher: 'Microsoft.Azure.Extensions'
    type: 'CustomScript'
    type_handler_version: 2.0
    protected_settings: '{"commandToExecute": "{{ lookup("template", "f5_bootstrapping.jinja2") }}"}'
    settings: '{"fileUris": [
    "https://github.com/F5Networks/f5-declarative-onboarding/releases/download/v{{ f5_rpm_do_version }}/f5-declarative-onboarding-{{ f5_rpm_do_version }}-{{ f5_rpm_do_build_version }}.noarch.rpm",
    "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v{{ f5_rpm_as3_version }}/f5-appsvcs-{{ f5_rpm_as3_version }}-{{ f5_rpm_as3_build_version }}.noarch.rpm",
    "https://github.com/F5Networks/f5-telemetry-streaming/releases/download/v{{ f5_rpm_ts_version }}/f5-telemetry-{{ f5_rpm_ts_version }}-{{ f5_rpm_ts_build_version }}.noarch.rpm"
    ]}'
    auto_upgrade_minor_version: true

- name: List VM instances in Virtual Machine ScaleSet
  delegate_to: localhost
  azure_rm_virtualmachinescalesetinstance_info:
    resource_group: "rg-{{ extra_platform_name }}"
    vmss_name: "{{ extra_vmss_name }}"
  register: output_vmss_instances

- name: Upgrade VMSS instances with Extension
  delegate_to: localhost
  azure_rm_virtualmachinescalesetinstance:
    resource_group: "rg-{{ extra_platform_name }}"
    vmss_name: "{{ extra_vmss_name }}"
    instance_id: "{{ item.instance_id }}"
    latest_model: true
  loop: "{{ output_vmss_instances.instances }}"
  register: output_vmss_instances_extension

- name: CMP OUTPUT
  debug:
    msg: "
    key={{ item.item.name }} provisioning state;value={{ item.item.provisioning_state }};help=VM #{{ cur_index }} with extension;
    key={{ item.item.name }} power state;value={{ item.item.power_state }};help=VM #{{ cur_index }} with extension;
    "
  loop: "{{ output_vmss_instances_extension.results }}"
  loop_control:
    index_var: cur_index
...